Index: src/main/java/ru/skypro/homework/controller/AdsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.skypro.homework.controller;\n\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.media.ArraySchema;\nimport io.swagger.v3.oas.annotations.media.Content;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport io.swagger.v3.oas.annotations.responses.ApiResponse;\nimport io.swagger.v3.oas.annotations.tags.Tag;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.MediaType;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport org.springframework.web.multipart.MultipartFile;\nimport ru.skypro.homework.dto.*;\nimport ru.skypro.homework.service.AdsService;\nimport ru.skypro.homework.service.CommentService;\n\n\n@RestController\n@RequestMapping(\"/\")\n@Tag(name = \"Объявления\", description = \"API по работе с объявлениями\")\n@RequiredArgsConstructor\npublic class AdsController {\n    private final AdsService adsService;\n    private final CommentService commentService;\n\n    @Operation(summary = \"Получить все объявления\")\n    @ApiResponse(\n            responseCode = \"200\",\n            description = \"OK\",\n            content = @Content(\n                    mediaType = MediaType.APPLICATION_JSON_VALUE,\n                    array = @ArraySchema(schema = @Schema(implementation = ResponseWrapperAdsDto[].class))\n            )\n    )\n    @GetMapping(\"/ads\")\n    public ResponseEntity<ResponseWrapperAdsDto> getAllAds() {\n        return ResponseEntity.ok(adsService.getAllAdsDto());\n    }\n\n    @Operation(summary = \"Добавить объявление\")\n    @ApiResponse(\n            responseCode = \"201\",\n            description = \"Created\",\n            content = @Content(\n                    mediaType = MediaType.APPLICATION_JSON_VALUE,\n                    schema = @Schema(implementation = AdsDto.class))\n    )\n    @ApiResponse(\n            responseCode = \"404\",\n            description = \"Not Found\"\n    )\n    @ApiResponse(\n            responseCode = \"401\",\n            description = \"Unauthorized\"\n    )\n    @ApiResponse(\n            responseCode = \"403\",\n            description = \"Forbidden\"\n    )\n    @PostMapping(value = \"/ads\", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)\n    public ResponseEntity<AdsDto> addAd(@RequestPart CreateAdsDto properties, @RequestPart MultipartFile image) {\n        return ResponseEntity.ok(adsService.addAds(properties, image));\n    }\n\n    @Operation(summary = \"Получить комментарии объявления\")\n    @ApiResponse(\n            responseCode = \"200\",\n            description = \"OK\",\n            content = @Content(\n                    mediaType = MediaType.APPLICATION_JSON_VALUE,\n                    array = @ArraySchema(schema = @Schema(implementation = ResponseWrapperCommentDto[].class)))\n    )\n    @ApiResponse(\n            responseCode = \"404\",\n            description = \"Not Found\"\n    )\n    @GetMapping(\"/ads/{adsId}/comments\")\n    public ResponseEntity<ResponseWrapperCommentDto> getComments(@PathVariable long adsId) {\n        ResponseWrapperCommentDto comments = commentService.getComments(adsId); //todo: написать реализацию\n        return ResponseEntity.ok().body(comments);\n    }\n\n    @Operation(summary = \"Добавить комментарий к объявлению\")\n    @ApiResponse(\n            responseCode = \"200\",\n            description = \"OK\",\n            content = @Content(\n                    mediaType = MediaType.APPLICATION_JSON_VALUE,\n                    schema = @Schema(implementation = CommentDto.class))\n    )\n    @ApiResponse(\n            responseCode = \"404\",\n            description = \"Not Found\"\n    )\n    @ApiResponse(\n            responseCode = \"401\",\n            description = \"Unauthorized\"\n    )\n    @ApiResponse(\n            responseCode = \"403\",\n            description = \"Forbidden\"\n    )\n\n    @PostMapping(\"/ads/{adsId}/comments\")\n    public ResponseEntity<CommentDto> addComment(@PathVariable long adsId, @RequestBody CommentDto commentDto) {\n        return ResponseEntity.ok(commentService.addComment(adsId, commentDto));\n    }\n\n    @Operation(summary = \"Получить информацию об объявлении\")\n    @ApiResponse(\n            responseCode = \"200\",\n            description = \"OK\",\n            content = @Content(\n                    mediaType = MediaType.APPLICATION_JSON_VALUE,\n                    schema = @Schema(implementation = FullAdsDto.class))\n    )\n    @ApiResponse(\n            responseCode = \"404\",\n            description = \"Not Found\"\n    )\n    @GetMapping(\"/ads/{adsId}\")\n    public ResponseEntity<FullAdsDto> getAds(@PathVariable long adsId) {\n        return ResponseEntity.ok(adsService.getFullAds(adsId));\n    }\n\n    @Operation(summary = \"Удалить объявление\")\n    @ApiResponse(\n            responseCode = \"204\",\n            description = \"No content\"\n    )\n    @ApiResponse(\n            responseCode = \"401\",\n            description = \"Unauthorized\"\n    )\n    @ApiResponse(\n            responseCode = \"403\",\n            description = \"Forbidden\"\n    )\n\n    @DeleteMapping(\"/ads/{adsId}\")\n    public ResponseEntity<?> removeAds(@PathVariable long adsId) {\n        return ResponseEntity.ok(adsService.removeAdsDto(adsId));\n    }\n\n    @Operation(summary = \"Обновить информацию об объявлении\")\n    @ApiResponse(\n            responseCode = \"200\",\n            description = \"OK\",\n            content = @Content(\n                    mediaType = MediaType.APPLICATION_JSON_VALUE,\n                    schema = @Schema(implementation = AdsDto.class))\n    )\n    @ApiResponse(\n            responseCode = \"404\",\n            description = \"Not Found\"\n    )\n    @ApiResponse(\n            responseCode = \"401\",\n            description = \"Unauthorized\"\n    )\n    @ApiResponse(\n            responseCode = \"403\",\n            description = \"Forbidden\"\n    )\n\n    @PatchMapping(\"/ads/{adsId}\")\n    public ResponseEntity<AdsDto> updateAds(@PathVariable long adsId, @RequestBody CreateAdsDto createAdsDto) {\n        return ResponseEntity.ok(adsService.updateAdsDto(adsId, createAdsDto));\n    }\n\n    @Operation(summary = \"Удалить комментарий\")\n    @ApiResponse(\n            responseCode = \"200\",\n            description = \"OK\"\n    )\n    @ApiResponse(\n            responseCode = \"404\",\n            description = \"Not Found\"\n    )\n    @ApiResponse(\n            responseCode = \"401\",\n            description = \"Unauthorized\"\n    )\n    @ApiResponse(\n            responseCode = \"403\",\n            description = \"Forbidden\"\n    )\n    @DeleteMapping(\"/ads/{adsId}/comments/{commentId}\")\n    public ResponseEntity<?> deleteComment(@PathVariable long adsId, @PathVariable long commentId) {\n        return ResponseEntity.ok(commentService.deleteComment(adsId, commentId));\n    }\n\n    @Operation(summary = \"Обновить комментарий\")\n    @ApiResponse(\n            responseCode = \"200\",\n            description = \"OK\",\n            content = @Content(\n                    mediaType = MediaType.APPLICATION_JSON_VALUE,\n                    schema = @Schema(implementation = CommentDto.class))\n    )\n    @ApiResponse(\n            responseCode = \"404\",\n            description = \"Not Found\"\n    )\n    @ApiResponse(\n            responseCode = \"401\",\n            description = \"Unauthorized\"\n    )\n    @ApiResponse(\n            responseCode = \"403\",\n            description = \"Forbidden\"\n    )\n    @PatchMapping(\"/ads/{adsId}/comments/{commentId}\")\n    public ResponseEntity<CommentDto> updateComment(@PathVariable long adsId, @PathVariable long commentId, @RequestBody CommentDto commentDto) {\n        return ResponseEntity.ok(commentService.updateComment(adsId, commentId, commentDto));\n    }\n\n    @Operation(summary = \"Получить объявления авторизованного пользователя\")\n    @ApiResponse(\n            responseCode = \"200\",\n            description = \"OK\",\n            content = @Content(\n                    mediaType = MediaType.APPLICATION_JSON_VALUE,\n                    schema = @Schema(implementation = ResponseWrapperAdsDto[].class))\n    )\n    @ApiResponse(\n            responseCode = \"401\",\n            description = \"Unauthorized\"\n    )\n    @ApiResponse(\n            responseCode = \"403\",\n            description = \"Forbidden\"\n    )\n    @GetMapping(\"/ads/me\")\n    public ResponseEntity<ResponseWrapperAdsDto> getAdsMe() {\n        return ResponseEntity.ok(adsService.getAllAdsMe());\n    }\n\n    @Operation(summary = \"Обновить картинку объявления\")\n    @ApiResponse(\n            responseCode = \"200\",\n            description = \"OK\",\n            content = @Content(\n                    mediaType = MediaType.APPLICATION_OCTET_STREAM_VALUE\n            ))\n    @ApiResponse(\n            responseCode = \"404\",\n            description = \"Not Found\"\n    )\n    @PatchMapping(value = \"/ads/{adsId}/image\", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)\n    public ResponseEntity<byte[]> updateImage(@PathVariable long adsId, @RequestPart MultipartFile image) {\n        adsService.updateImageAdsDto(adsId, image);\n        return ResponseEntity.ok().build();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/skypro/homework/controller/AdsController.java b/src/main/java/ru/skypro/homework/controller/AdsController.java
--- a/src/main/java/ru/skypro/homework/controller/AdsController.java	(revision acdde761e002cd5ec825bea0494c12eb9ffe4bfb)
+++ b/src/main/java/ru/skypro/homework/controller/AdsController.java	(date 1686329954636)
@@ -17,8 +17,8 @@
 
 
 @RestController
-@RequestMapping("/")
 @Tag(name = "Объявления", description = "API по работе с объявлениями")
+@CrossOrigin(value = "http://localhost:3000")
 @RequiredArgsConstructor
 public class AdsController {
     private final AdsService adsService;
Index: src/main/java/ru/skypro/homework/service/AdsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.skypro.homework.service;\n\nimport org.springframework.web.multipart.MultipartFile;\nimport ru.skypro.homework.dto.AdsDto;\nimport ru.skypro.homework.dto.CreateAdsDto;\nimport ru.skypro.homework.dto.FullAdsDto;\nimport ru.skypro.homework.dto.ResponseWrapperAdsDto;\n\n/**\n * Интерфейс для работы с Ads\n */\npublic interface AdsService {\n\n    ResponseWrapperAdsDto getAllAdsDto();\n\n    AdsDto addAds(CreateAdsDto createAdsDto, MultipartFile image);\n\n    FullAdsDto getFullAds(long id);\n\n    boolean removeAdsDto(long id);\n\n    AdsDto updateAdsDto(long id, CreateAdsDto adDto);\n\n    ResponseWrapperAdsDto getAllAdsMe();\n\n    void updateImageAdsDto(long id, MultipartFile image);\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/skypro/homework/service/AdsService.java b/src/main/java/ru/skypro/homework/service/AdsService.java
--- a/src/main/java/ru/skypro/homework/service/AdsService.java	(revision acdde761e002cd5ec825bea0494c12eb9ffe4bfb)
+++ b/src/main/java/ru/skypro/homework/service/AdsService.java	(date 1686331299690)
@@ -9,7 +9,7 @@
 /**
  * Интерфейс для работы с Ads
  */
-public interface AdsService {
+public interface  AdsService {
 
     ResponseWrapperAdsDto getAllAdsDto();
 
